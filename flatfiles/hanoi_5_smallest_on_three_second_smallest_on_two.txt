"""
For a game where there are 5 disks,
write down the Facts and Rules to model the game state where 
disk1 (the smallest) is on peg3
disk2 (the second smallest) is on peg2, and
other disks are on peg1.

        |            |            |
        |            |            |
        |            |            |
        |            |            |
     ---|--- disk3   |            |
    ----|----        |            |
   -----|-----     --|-- disk2   -|- disk1
==========================================
       peg1         peg2         peg3
       
Example: 
fact: (pred obj1 obj2)
rule: ((pred obj1 obj2) (pred obj2 obj3)) -> (pred obj1 obj3)

"""

fact: (isA disk1 Disk)
fact: (isA disk2 Disk)
fact: (isA disk3 Disk)
fact: (isA disk4 Disk)
fact: (isA disk5 Disk)

fact: (isA peg1 Peg)
fact: (isA peg2 Peg)
fact: (isA peg3 Peg)

fact: (on disk5 peg1)
fact: (on disk4 peg1)
fact: (on disk3 peg1)
fact: (on disk2 peg2)
fact: (on disk1 peg3)

fact: (onTop disk4 disk5)
fact: (onTop disk3 disk4)

fact: (largerThan disk5 disk4)
fact: (largerThan disk4 disk3)
fact: (largerThan disk3 disk2)
fact: (largerThan disk2 disk1)

fact: (topStack disk1)
fact: (topStack disk2)
fact: (topStack disk3)

rule: ((isEmpty ?A) (topStack ?B) (on ?B ?C) (isA ?B Disk) (isA ?A Peg) (isA ?C Peg) -> (movable ?B ?C ?A))
rule: ((largerThan ?A ?B) (largerThan ?B ?C) (isA ?A Disk) (isA ?B Disk) (isA ?C Disk) -> (largerThan ?A ?C))
rule: ((on ?A ?B) (on ?C ?D) (topStack ?A) (topStack ?C) (largerThan ?C ?A) (isA ?A Disk) (isA ?C Disk) (isA ?B Peg) (isA ?D Peg) -> (movable ?A ?B ?D))